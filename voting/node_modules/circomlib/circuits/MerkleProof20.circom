pragma circom 2.0.0;
include "poseidon.circom";

template MerkleProof20() {
    signal input leaf;
    signal input pathElements[20];
    signal input pathIndices[20];

    signal output root;

    var level;
    var currentHash;

    component hashers[20];

    currentHash <== leaf;

    for (level = 0; level < 20; level++) {
        hashers[level] = Poseidon(2);

        var left;
        var right;

        left <== pathIndices[level] == 0 ? currentHash : pathElements[level];
        right <== pathIndices[level] == 0 ? pathElements[level] : currentHash;

        hashers[level].inputs[0] <== left;
        hashers[level].inputs[1] <== right;

        currentHash <== hashers[level].out;
    }

    root <== currentHash;
}

component main = MerkleProof20();
